<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Belicheva Daria</title>
    <link>https://dmbelicheva.github.io/</link>
      <atom:link href="https://dmbelicheva.github.io/index.xml" rel="self" type="application/rss+xml" />
    <description>Belicheva Daria</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>en-us</language><lastBuildDate>Sat, 01 Jun 2030 13:00:00 +0000</lastBuildDate>
    <image>
      <url>https://dmbelicheva.github.io/media/icon_hu0b7a4cb9992c9ac0e91bd28ffd38dd00_9727_512x512_fill_lanczos_center_3.png</url>
      <title>Belicheva Daria</title>
      <link>https://dmbelicheva.github.io/</link>
    </image>
    
    <item>
      <title>Example Talk</title>
      <link>https://dmbelicheva.github.io/talk/example-talk/</link>
      <pubDate>Sat, 01 Jun 2030 13:00:00 +0000</pubDate>
      <guid>https://dmbelicheva.github.io/talk/example-talk/</guid>
      <description>&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Click on the &lt;strong&gt;Slides&lt;/strong&gt; button above to view the built-in slides feature.
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Slides can be added in a few ways:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Create&lt;/strong&gt; slides using Wowchemy&amp;rsquo;s &lt;a href=&#34;https://wowchemy.com/docs/managing-content/#create-slides&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;em&gt;Slides&lt;/em&gt;&lt;/a&gt; feature and link using &lt;code&gt;slides&lt;/code&gt; parameter in the front matter of the talk file&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Upload&lt;/strong&gt; an existing slide deck to &lt;code&gt;static/&lt;/code&gt; and link using &lt;code&gt;url_slides&lt;/code&gt; parameter in the front matter of the talk file&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Embed&lt;/strong&gt; your slides (e.g. Google Slides) or presentation video on this page using &lt;a href=&#34;https://wowchemy.com/docs/writing-markdown-latex/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;shortcodes&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Further event details, including &lt;a href=&#34;https://wowchemy.com/docs/writing-markdown-latex/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;page elements&lt;/a&gt; such as image galleries, can be added to the body of this page.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Programming languages C.</title>
      <link>https://dmbelicheva.github.io/post/post-5/</link>
      <pubDate>Sun, 13 Dec 2020 00:00:00 +0000</pubDate>
      <guid>https://dmbelicheva.github.io/post/post-5/</guid>
      <description>&lt;h1 id=&#34;introduction-to-the-c-language&#34;&gt;Introduction to the C language&lt;/h1&gt;
&lt;p&gt;The C programming language was created by Dennis Ritchie of AT&amp;amp;T Bell Laboratories as a high-level programming language for developing the UNIX operating system. Currently, the language is widely used in various fields. C is especially popular with system programmers because it allows you to write programs simply and concisely.&lt;/p&gt;
&lt;p&gt;The main book describing the C language is the book by Brian Kernighan and Dennis Ritchie &amp;ldquo;The C Programming Language&amp;rdquo; (1978). Books on the C language were written by Bolon (1986), Gehani (1984), Hancock and Krieger (1986), Harbison and Steele (1984) and many others.&lt;/p&gt;
&lt;p&gt;In this appendix, we will try to give a fairly complete introduction to C, so that those who are familiar with high-level languages such as Pascal, PL/1 or Modula 2 will be able to understand most of the MINIX code given in this book. C features that are not used in MINIX are not discussed here. Numerous subtle points are omitted. The emphasis is on reading C programs, not writing code.&lt;/p&gt;
&lt;h1 id=&#34;basics-of-the-c-language&#34;&gt;Basics of the C language&lt;/h1&gt;
&lt;p&gt;A C program consists of a set of procedures (often called functions, even if they do not return values). These procedures contain declarations, operators, and other elements that together tell the computer what to do. Figure A-1 shows a small procedure in which three integer variables are declared and values are assigned to them. The name of the procedure is main. The procedure has no formal parameters, as indicated by the absence of any identifiers between the brackets behind the procedure name. The procedure body is enclosed in curly brackets ( { } ). This example shows that C has variables, and that these variables must be declared before use. C also has operators, in this example these are assignment operators. All operators must end with a semicolon (unlike Pascal, who uses colons between operators, not after them).
Comments start with the characters &amp;quot; / &lt;em&gt;&amp;quot; and end with the characters &amp;ldquo;&lt;/em&gt; /&amp;rdquo; and can take up several lines.&lt;/p&gt;
&lt;h1 id=&#34;basic-data-types&#34;&gt;Basic Data types&lt;/h1&gt;
&lt;p&gt;Programs operate with various data, which can be simple and structured. Simple data is integers and real numbers, symbols and pointers (addresses of objects in memory). Integers do not have, and real numbers have a fractional part. Structured data is arrays and structures; they will be discussed below.&lt;/p&gt;
&lt;p&gt;The language distinguishes between the concepts of &amp;ldquo;data type&amp;rdquo; and &amp;ldquo;type modifier&amp;rdquo;. A data type is, for example, an integer, and a modifier is signed or unsigned. A signed integer will have both positive and negative values, and an unsigned integer will have only positive values. In the C language, five basic types can be distinguished, which are defined by the following keywords:
char - character;
int - whole;
float - real;
double - real double precision;
void - doesn&amp;rsquo;t matter.&lt;/p&gt;
&lt;p&gt;Let&amp;rsquo;s give them a brief description:&lt;/p&gt;
&lt;p&gt;A variable of type char has a size of 1 byte, its values are various characters from the code table, for example: &amp;lsquo;f&amp;rsquo;, &amp;lsquo;:&amp;rsquo;, &amp;lsquo;j&amp;rsquo; (when written in the program, they are enclosed in single quotes).
The size of an int type variable is not defined in the C language standard. In most programming systems, the size of an int variable corresponds to the size of an entire machine word. For example, in compilers for 16-bit processors, an int variable has a size of 2 bytes. In this case, the signed values of this variable can range from -32768 to 32767.
The float keyword allows you to define variables of real type. Their values have a fractional part separated by a dot, for example: -5.6, 31.28, etc. Real numbers can also be written in floating point form, for example: -1.09e+4. The number before the symbol &amp;ldquo;e&amp;rdquo; is called the mantissa, and after the &amp;ldquo;e&amp;rdquo; - the order. A variable of the float type occupies 32 bits in memory. It can take values in the range from 3.4e-38 to 3.4e+38.
The double keyword allows you to define a double-precision real variable. It takes up twice as much space in memory as a float variable (i.e. its size is 64 bits). A double variable can take values in the range from 1.7e-308 to 1.7e+308.
The void keyword (meaningless) is used to neutralize the value of an object, for example, to declare a function that does not return any values.
An object of some basic type can be modified. For this purpose, special keywords called modifiers are used. The C ANSI standard has the following type modifiers:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;unsigned&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;signed&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;short&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;long&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Modifiers are written before type specifiers, for example: unsigned char. If a specifier is omitted after the modifier, then the compiler assumes that this specifier is int. Thus, the following lines:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;long a;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;long int a;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;are identical and define object a as a long integer. Table 1 illustrates possible combinations of modifiers (unsigned, signed, short, long) with specifiers (char, int, float and double), and also shows the size and range of object values (for 16-bit compilers).&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Оформление отчета</title>
      <link>https://dmbelicheva.github.io/post/post-3/</link>
      <pubDate>Sun, 13 Dec 2020 00:00:00 +0000</pubDate>
      <guid>https://dmbelicheva.github.io/post/post-3/</guid>
      <description>&lt;h2 id=&#34;что-такое-отчет&#34;&gt;Что такое отчет?&lt;/h2&gt;
&lt;p&gt;Отчёт — это структурированное сообщение о результатах вашей работы, которое вы делаете в устной или письменной форме.&lt;/p&gt;
&lt;p&gt;Обычно в отчете должны присутствовать следующие элементы:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Цель&lt;/li&gt;
&lt;li&gt;Задачи&lt;/li&gt;
&lt;li&gt;Теоретическое введение&lt;/li&gt;
&lt;li&gt;Описание выполнения работы&lt;/li&gt;
&lt;li&gt;Итоги&lt;/li&gt;
&lt;li&gt;Список литературы&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;как-оформлять-отчет&#34;&gt;Как оформлять отчет?&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Перед выполнением работы обычно уже есть поставленная цель, поэтому ее и следует записать в отчет. Главное корректно, грамотно и кратко ее сформулировать.&lt;/li&gt;
&lt;li&gt;На основе цели перед Вами выдвигаются (или Вы сами составляете) задачи, которые необходимо выполнить, чтобы достичь желаемого результата. Задачи лучше написать в отчете под отельными номерами (также можно выделять подпункты, если требуется).&lt;/li&gt;
&lt;li&gt;В теоретическом введение надо написать информацию, связанную с Вашей работой. Это могут быть ключевые определения вместе с примерами или же просто описание какого-либо процесса/действия/объекта.&lt;/li&gt;
&lt;li&gt;Далее Вам нужно описать все этапы работы (иногда давая пояснения), желательно подкреплять эти этапы картинками (их нужно подписать и расставить ссылки на них в нужных местах).&lt;/li&gt;
&lt;li&gt;Итоги формулируются в соответствии с целью. Они тоже должны быть достаточно краткими.&lt;/li&gt;
&lt;li&gt;Источники, откуда Вы брали информацию для теоретического введения, необходимо указать в конце Вашего отчета (они должны быть оформлены по ГОСТу).&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>Пост по прошедшей неделе</title>
      <link>https://dmbelicheva.github.io/post/week-1/</link>
      <pubDate>Sun, 13 Dec 2020 00:00:00 +0000</pubDate>
      <guid>https://dmbelicheva.github.io/post/week-1/</guid>
      <description>&lt;h2 id=&#34;цели-прошедшей-недели&#34;&gt;Цели прошедшей недели&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Выполнить две лабораторные работы по предмету операционные системы.&lt;/li&gt;
&lt;li&gt;Посетить все занятия (операционные системы, физкультура и модуль переводчика)&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;процесс-выполнения&#34;&gt;Процесс выполнения&lt;/h2&gt;
&lt;p&gt;Во вторник я посетила семинары по операционным системам, начала выполнение лабораторной работы №5, потом отправилась на занятия по физкультуре (где мы гуляла вокруг озера).
В пятницу у меня были дистанционные занятия по английскому языку (модуль переводчика). Там я написала тест по прошедшим темам.&lt;/p&gt;
&lt;h2 id=&#34;итоги&#34;&gt;Итоги&lt;/h2&gt;
&lt;p&gt;В результате выполнения двух лабораторных работ (5 и 6) я научилась работать с файловой системой Linux, а также ознакомилась с инструментами поиска файлов и фильтрации текстовых данных. Узнала, что такое перенаправление ввода/выводы и что такое конвейер. Продолжила освоение работы с терминалом Linux, изучение новых команд.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Пост по прошедшей неделе</title>
      <link>https://dmbelicheva.github.io/post/week-2/</link>
      <pubDate>Sun, 13 Dec 2020 00:00:00 +0000</pubDate>
      <guid>https://dmbelicheva.github.io/post/week-2/</guid>
      <description>&lt;h2 id=&#34;цели-прошедшей-недели&#34;&gt;Цели прошедшей недели&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Выполнить две лабораторные работы по предмету операционные системы.&lt;/li&gt;
&lt;li&gt;Отметить День Победы&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;процесс-выполнения&#34;&gt;Процесс выполнения&lt;/h2&gt;
&lt;p&gt;Во вторник был праздничный день, который я провела на даче с друзьями. После этого я отправилась в Москву, где я начала выполнение лабораторнной работы №7.
В среду у меня были занятия по компьютерной алгебре, где мы продолжали работу с Maxima.
В четверг у меня был предмет технология программирования. Там мы писали программы на С++.
В пятницу у меня были занятия по английскому языку.&lt;/p&gt;
&lt;h2 id=&#34;итоги&#34;&gt;Итоги&lt;/h2&gt;
&lt;p&gt;В результате выполнения двух лабораторных работ (7 и 8) я освоила основные возможности командной оболочки Midnight Commander. Приобрела навыки практической работы по просмотру каталогов и файлов; манипуляций
с ними. А также познакомилась с операционной системой Linux и получила практические навыки работы с редактором vi, установленным по умолчанию практически во всех дистрибутивах.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Пост по прошедшей неделе</title>
      <link>https://dmbelicheva.github.io/post/week-3/</link>
      <pubDate>Sun, 13 Dec 2020 00:00:00 +0000</pubDate>
      <guid>https://dmbelicheva.github.io/post/week-3/</guid>
      <description>&lt;h2 id=&#34;цели-прошедшей-недели&#34;&gt;Цели прошедшей недели&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Выполнить две лабораторные работы по предмету операционные системы.&lt;/li&gt;
&lt;li&gt;Написать контрольную работу по компьютерной алгебре&lt;/li&gt;
&lt;li&gt;Сдать зачет по английскому языку&lt;/li&gt;
&lt;li&gt;Сходить на ночь в университете&lt;/li&gt;
&lt;li&gt;Сходить на день открытых дверей в субботу&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;процесс-выполнения&#34;&gt;Процесс выполнения&lt;/h2&gt;
&lt;p&gt;Неделя началась достаточно неприятно (в понедельник были дистанционные лекции с 9 утра, но это не так плохо). Во вторник я пришла на семинары по операционным системам, и к моему огорчению, там было только два моих одногруппника и преподаватель, но потом пришли две мои подруги, что значительно улучшило мою жизнь. Я пыталась учиться программировать на bash (пока дается с трудом), но, как говорится, что не убивает нас, делает нас сильнее. В тот день осилила 10 лабораторную работу, что я конечно же считаю достижением. После этого я отправилась на физкультуру, где я провела достаточно утомительные полтора часа ходя по кругу. На следующий день меня ждали не очень приятные боли в мышцах. В среду я написала контрольную по компьютерной алгебре, она была легкой, особенно если учитывать тот факт, что нам разрешили пользоваться лекциями. Вот такой краткий обзор у меня получился. Заходите на мой сайт и следите за новостями моей прекрасной жизни!&lt;/p&gt;
&lt;h2 id=&#34;итоги&#34;&gt;Итоги&lt;/h2&gt;
&lt;p&gt;Неделя вышла продуктивной.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Пост по прошедшей неделе</title>
      <link>https://dmbelicheva.github.io/post/week-4/</link>
      <pubDate>Sun, 13 Dec 2020 00:00:00 +0000</pubDate>
      <guid>https://dmbelicheva.github.io/post/week-4/</guid>
      <description>&lt;h2 id=&#34;цели-прошедшей-недели&#34;&gt;Цели прошедшей недели&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Выполнить две лабораторные работы по предмету операционные системы.&lt;/li&gt;
&lt;li&gt;Сдать зачет по английскому языку&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;процесс-выполнения&#34;&gt;Процесс выполнения&lt;/h2&gt;
&lt;p&gt;На этой неделе мне пришлось немало повозиться с 11 лабораторной работой, и в итоге я ее осилила, чем я очень горжусь. Я попыталась приобрести навыки программирования на bash (все прошло лучше, чем могло быть). Также я сдала зачет по английскому языку. Нам надо было написать и рассказать монолог, а потом мои одногруппники задавали мне дополнительные вопросы. Я смогла на все ответить. Лаборатные по технологиям программирования проходят не так гладко, как хотелось бы, но я держусь!&lt;/p&gt;
&lt;h2 id=&#34;итоги&#34;&gt;Итоги&lt;/h2&gt;
&lt;p&gt;Неделя вышла продуктивной.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Пост по прошедшей неделе</title>
      <link>https://dmbelicheva.github.io/post/week-5/</link>
      <pubDate>Sun, 13 Dec 2020 00:00:00 +0000</pubDate>
      <guid>https://dmbelicheva.github.io/post/week-5/</guid>
      <description>&lt;h2 id=&#34;goals-of-the-past-week&#34;&gt;Goals of the past week&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Perform two laboratory work on the subject of operating systems.&lt;/li&gt;
&lt;li&gt;Write a program.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;execution-process&#34;&gt;Execution process&lt;/h2&gt;
&lt;p&gt;This week I finally completed the laboratory work. Honestly, it wasn&amp;rsquo;t easy, but I was able to overcome all the difficulties and cope with these unbearable lags. Despite all the pain they caused me, I think they also helped me a lot. These labs have tempered my character, strengthened my inner core and prepared me for a thorny future. Thank you, Dmitry Sergeevich.&lt;/p&gt;
&lt;h2 id=&#34;results&#34;&gt;Results&lt;/h2&gt;
&lt;p&gt;The week turned out to be productive.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Управление версиями. Git.</title>
      <link>https://dmbelicheva.github.io/post/post-1/</link>
      <pubDate>Sun, 13 Dec 2020 00:00:00 +0000</pubDate>
      <guid>https://dmbelicheva.github.io/post/post-1/</guid>
      <description>&lt;h2 id=&#34;version-control-systems&#34;&gt;Version control systems&lt;/h2&gt;
&lt;p&gt;Version Control Systems (VCS) are used when several people work on one project. Usually, the main project tree is stored in a local or remote repository, to which access is configured for project participants. By
when making changes to the project content, the version control system allows you to fix them, combine changes made by different project participants, roll back to any earlier version of the project, if required.&lt;/p&gt;
&lt;p&gt;In classical version control systems, a centralized model is used, assuming a single repository for storing files. Most version control functions are performed by a special server. The project participant (user) receives the version of files he needs before starting work through certain commands. After making changes, the user places the new version in the repository. At the same time, previous versions are not deleted from the central repository and you can return to them at any time. The server may not save the full version of the modified files, but perform a so—called delta compression - save only changes between successive versions, which reduces the amount of data stored.&lt;/p&gt;
&lt;p&gt;Version control systems support the ability to track and resolve conflicts that may arise when several people work on a single file. You can merge (merge) changes made by different participants (automatically or manually), manually select the desired version, cancel the changes altogether or lock files for modification. Depending on the settings, the lock does not allow other users to get a working copy or prevents changing the working copy of the file by means of the OS file system, thus providing privileged access to only one user working with the file.&lt;/p&gt;
&lt;p&gt;Version control systems can also provide additional, more flexible functionality. For example, they can support working with multiple versions of a single file, keeping a common history of changes up to the point of branching versions and their own change histories of each branch. In addition, information is usually available about which of the participants, when and what changes were made. Usually this kind of information is stored in the change log, access to which can be restricted.&lt;/p&gt;
&lt;p&gt;Unlike the classical ones, in distributed version control systems, a central repository is not mandatory.
Among the classic VCS, the most famous are CVS, Subversion, and among the distributed ones — Git, Bazaar, Mercurial. The principles of their work are similar, they differ mainly
the syntax of the commands used in the work.&lt;/p&gt;
&lt;h2 id=&#34;git&#34;&gt;Git&lt;/h2&gt;
&lt;p&gt;Git is a console utility for tracking and maintaining the history of file changes in your project. It is most often used for code, but it is also possible for other files. For example, for pictures - useful for designers.
With Git-a, you can roll back your project to an older version, compare, analyze, or merge your changes into the repository.
A repository is a repository of your code and the history of its changes. Git works locally and all your repositories are stored in specific folders on your hard drive.
Your repositories can also be stored on the Internet. Usually three services are used for this:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;GitHub&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Bitbucket&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;GitLab&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Each save point of your project is called a commit. Each commit-a has a hash (unique id) and a comment. A branch is assembled from such commits. A branch is a history of changes. Each branch has its own name. A repository can contain several branches that are created from other branches or merged into them.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Языки научного программирования</title>
      <link>https://dmbelicheva.github.io/post/post-4/</link>
      <pubDate>Sun, 13 Dec 2020 00:00:00 +0000</pubDate>
      <guid>https://dmbelicheva.github.io/post/post-4/</guid>
      <description>&lt;h1 id=&#34;научные-языки-программирования&#34;&gt;Научные языки программирования&lt;/h1&gt;
&lt;p&gt;В компьютерном программировании , научный язык программирования может относиться к двум степеням той же концепции.&lt;/p&gt;
&lt;p&gt;В широком смысле научный язык программирования - это язык программирования, который широко используется в вычислительной науке и вычислительной математике . В этом смысле C / C ++ и Python можно рассматривать как языки научного программирования.&lt;/p&gt;
&lt;p&gt;В более широком смысле научный язык программирования - это язык, который разработан и оптимизирован для использования математических формул и матриц . Такие языки характеризуются не только наличием библиотек, выполняющих математические или научные функции, но и синтаксисом самого языка. Например, ни C ++, ни Python не имеют встроенных типов матриц или функций для матричной арифметики (сложение, умножение и т. Д.); вместо этого эта функция доступна через стандартные библиотеки. Языки научного программирования в более строгом смысле включают ALGOL , APL , Fortran , J , Julia ,Maple , MATLAB и R.&lt;/p&gt;
&lt;p&gt;Языки научного программирования не следует путать с научным языком в целом, который свободно относится к более высоким стандартам точности, правильности и краткости, ожидаемым от практиков научного метода .&lt;/p&gt;
&lt;h1 id=&#34;примеры&#34;&gt;Примеры&lt;/h1&gt;
&lt;h2 id=&#34;линейная-алгебра&#34;&gt;Линейная алгебра&lt;/h2&gt;
&lt;p&gt;Языки научного программирования предоставляют возможности для работы с линейной алгеброй.
Работа с большими векторами и матрицами является ключевой особенностью этих языков, поскольку линейная алгебра закладывает основу математической оптимизации , которая, в свою очередь, позволяет использовать основные приложения, такие как глубокое обучение.&lt;/p&gt;
&lt;h2 id=&#34;математическая-оптимизация&#34;&gt;Математическая оптимизация&lt;/h2&gt;
&lt;p&gt;В научном языке программирования мы можем вычислять оптимум функции с синтаксисом, близким к математическому языку.
В этом примере используется метод минимизации Ньютона . Современные языки научного программирования будут использовать автоматическое дифференцирование для вычисления градиентов и гессианов функции, заданной в качестве входных данных; ср. дифференцируемое программирование . Здесь для этой задачи выбрана автоматическая прямая дифференциация. Старые языки научного программирования, такие как почтенный Фортран, требовали от программиста передавать рядом с функцией, которая должна быть оптимизирована, функцию, которая вычисляет градиент, и функцию, которая вычисляет гессиан.&lt;/p&gt;
&lt;p&gt;Чем больше знаний о функции, которую необходимо минимизировать, тем больше можно использовать более эффективные алгоритмы. Например, выпуклая оптимизация обеспечивает более быстрые вычисления, когда функция является выпуклой, квадратичное программирование обеспечивает более быстрые вычисления, когда функция не более чем квадратична по своим переменным, и линейное программирование, когда функция максимально линейна.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Языки разметки. LaTeX.</title>
      <link>https://dmbelicheva.github.io/post/post-2/</link>
      <pubDate>Sun, 13 Dec 2020 00:00:00 +0000</pubDate>
      <guid>https://dmbelicheva.github.io/post/post-2/</guid>
      <description>&lt;h2 id=&#34;языки-разметки-что-это-такое&#34;&gt;Языки разметки. Что это такое?&lt;/h2&gt;
&lt;p&gt;Язык разметки (markup language) – средство описания данных и метаданных, хранящихся в документе.&lt;/p&gt;
&lt;p&gt;Примеры языков разметки:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Язык разметки гипертекста HTML&lt;/li&gt;
&lt;li&gt;Язык разметки XML&lt;/li&gt;
&lt;li&gt;Язык разметки векторной графики SVG&lt;/li&gt;
&lt;li&gt;Язык разметки текста и формул TEX&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;основные-элементы-разметки&#34;&gt;Основные элементы разметки&lt;/h2&gt;
&lt;p&gt;Основными понятиями любого языка разметки являются теги, элементы и атрибуты.
Теги (tags) – специальные символы, позволяющие отличать в документе описание разметки от описания данных.
Элемент – это тэги в совокупности с их содержанием (данными).
Атрибут используется при определении элемента, чтобы задать какие-либо параметры, уточняющие характеристики данного элемента.&lt;/p&gt;
&lt;h2 id=&#34;виды-разметки&#34;&gt;Виды разметки&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Стилистическая разметка отвечает за внешний вид документа.&lt;/li&gt;
&lt;li&gt;Структурная разметка задает структуру документа.&lt;/li&gt;
&lt;li&gt;Семантическая (контентная) разметка информирует о содержании данных.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;latex&#34;&gt;LaTex&lt;/h2&gt;
&lt;p&gt;LaTEX (произносится как «лэйтех» или «латех») представляет собой инструмент для создания профессиональных документов. В его основе лежит парадигма редактирования WYSIWYM (что вижу, то и подразумеваю), то есть от пользователя требуется сосредоточиться только на содержимом документа, оставив его форматирование программе. Вместо ручного распределения текста по странице, как это делается в Microsoft Word или LibreOffice Writer, можно просто его вводить, позволив LaTeX заняться остальным.&lt;/p&gt;
&lt;h2 id=&#34;зачем-нужен-latex&#34;&gt;Зачем нужен LaTeX?&lt;/h2&gt;
&lt;p&gt;Этот инструмент используется повсеместно для создания научных документов, написания книг, а также многих других форм публикаций. Он позволяет не только создавать красиво оформленные документы, но также дает пользователям возможность очень быстро реализовывать такие сложные элементы печатного набора, как математические выражения, таблицы, ссылки и библиографии, получая согласованную разметку по всем разделам.&lt;/p&gt;
&lt;p&gt;Благодаря доступности большого числа открытых библиотек (об этом чуть позже) возможности LaTEX становятся практически безграничны. Эти библиотеки расширяют возможности пользователей еще больше, позволяя добавлять сноски, рисовать схемы и пр.&lt;/p&gt;
&lt;p&gt;Одна из наиболее веских причин, по которой многие используют LaTeX, заключается в отделении содержания документа от его стиля. Это означает, что после написания содержимого, можно с легкостью изменять его внешний вид. Аналогичным образом, можно создать один стиль документа и использовать его для стандартизации внешнего вида других.&lt;/p&gt;
&lt;p&gt;Это позволяет научным журналам создавать шаблоны для предлагаемых на рассмотрение материалов. Такие шаблоны имеют заданную разметку, в результате чего добавить остается лишь содержание. На деле существуют сотни подобных шаблонов, начиная с различных резюме и заканчивая презентациями слайдов.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Slides</title>
      <link>https://dmbelicheva.github.io/slides/example/</link>
      <pubDate>Tue, 05 Feb 2019 00:00:00 +0000</pubDate>
      <guid>https://dmbelicheva.github.io/slides/example/</guid>
      <description>&lt;h1 id=&#34;create-slides-in-markdown-with-wowchemy&#34;&gt;Create slides in Markdown with Wowchemy&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;https://wowchemy.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Wowchemy&lt;/a&gt; | &lt;a href=&#34;https://owchemy.com/docs/managing-content/#create-slides&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Documentation&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;features&#34;&gt;Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Efficiently write slides in Markdown&lt;/li&gt;
&lt;li&gt;3-in-1: Create, Present, and Publish your slides&lt;/li&gt;
&lt;li&gt;Supports speaker notes&lt;/li&gt;
&lt;li&gt;Mobile friendly slides&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;controls&#34;&gt;Controls&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Next: &lt;code&gt;Right Arrow&lt;/code&gt; or &lt;code&gt;Space&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Previous: &lt;code&gt;Left Arrow&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Start: &lt;code&gt;Home&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Finish: &lt;code&gt;End&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Overview: &lt;code&gt;Esc&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Speaker notes: &lt;code&gt;S&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Fullscreen: &lt;code&gt;F&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Zoom: &lt;code&gt;Alt + Click&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/hakimel/reveal.js#pdf-export&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;PDF Export&lt;/a&gt;: &lt;code&gt;E&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;code-highlighting&#34;&gt;Code Highlighting&lt;/h2&gt;
&lt;p&gt;Inline code: &lt;code&gt;variable&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Code block:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;porridge&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;blueberry&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;porridge&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;blueberry&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Eating...&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;h2 id=&#34;math&#34;&gt;Math&lt;/h2&gt;
&lt;p&gt;In-line math: $x + y = z$&lt;/p&gt;
&lt;p&gt;Block math:&lt;/p&gt;
&lt;p&gt;$$
f\left( x \right) = ;\frac{{2\left( {x + 4} \right)\left( {x - 4} \right)}}{{\left( {x + 4} \right)\left( {x + 1} \right)}}
$$&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;fragments&#34;&gt;Fragments&lt;/h2&gt;
&lt;p&gt;Make content appear incrementally&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;{{% fragment %}} One {{% /fragment %}}
{{% fragment %}} **Two** {{% /fragment %}}
{{% fragment %}} Three {{% /fragment %}}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Press &lt;code&gt;Space&lt;/code&gt; to play!&lt;/p&gt;
&lt;span class=&#34;fragment &#34; &gt;
  One
&lt;/span&gt;
&lt;span class=&#34;fragment &#34; &gt;
  &lt;strong&gt;Two&lt;/strong&gt;
&lt;/span&gt;
&lt;span class=&#34;fragment &#34; &gt;
  Three
&lt;/span&gt;
&lt;hr&gt;
&lt;p&gt;A fragment can accept two optional parameters:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;class&lt;/code&gt;: use a custom style (requires definition in custom CSS)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;weight&lt;/code&gt;: sets the order in which a fragment appears&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;speaker-notes&#34;&gt;Speaker Notes&lt;/h2&gt;
&lt;p&gt;Add speaker notes to your presentation&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;{{% speaker_note %}}
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;-&lt;/span&gt; Only the speaker can read these notes
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;-&lt;/span&gt; Press &lt;span class=&#34;sb&#34;&gt;`S`&lt;/span&gt; key to view
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  {{% /speaker_note %}}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Press the &lt;code&gt;S&lt;/code&gt; key to view the speaker notes!&lt;/p&gt;
&lt;aside class=&#34;notes&#34;&gt;
  &lt;ul&gt;
&lt;li&gt;Only the speaker can read these notes&lt;/li&gt;
&lt;li&gt;Press &lt;code&gt;S&lt;/code&gt; key to view&lt;/li&gt;
&lt;/ul&gt;

&lt;/aside&gt;
&lt;hr&gt;
&lt;h2 id=&#34;themes&#34;&gt;Themes&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;black: Black background, white text, blue links (default)&lt;/li&gt;
&lt;li&gt;white: White background, black text, blue links&lt;/li&gt;
&lt;li&gt;league: Gray background, white text, blue links&lt;/li&gt;
&lt;li&gt;beige: Beige background, dark text, brown links&lt;/li&gt;
&lt;li&gt;sky: Blue background, thin dark text, blue links&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;night: Black background, thick white text, orange links&lt;/li&gt;
&lt;li&gt;serif: Cappuccino background, gray text, brown links&lt;/li&gt;
&lt;li&gt;simple: White background, black text, blue links&lt;/li&gt;
&lt;li&gt;solarized: Cream-colored background, dark green text, blue links&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;/media/boards.jpg&#34;
  &gt;

&lt;h2 id=&#34;custom-slide&#34;&gt;Custom Slide&lt;/h2&gt;
&lt;p&gt;Customize the slide style and background&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;{{&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;slide&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;background-image&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;/media/boards.jpg&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;}}
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;{{&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;slide&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;background-color&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;#0000FF&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;}}
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;{{&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;slide&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;my-style&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;}}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;h2 id=&#34;custom-css-example&#34;&gt;Custom CSS Example&lt;/h2&gt;
&lt;p&gt;Let&amp;rsquo;s make headers navy colored.&lt;/p&gt;
&lt;p&gt;Create &lt;code&gt;assets/css/reveal_custom.css&lt;/code&gt; with:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-css&#34; data-lang=&#34;css&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;reveal&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;section&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;h1&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;reveal&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;section&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;h2&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;reveal&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;section&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;h3&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;color&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;navy&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;h1 id=&#34;questions&#34;&gt;Questions?&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/wowchemy/wowchemy-hugo-modules/discussions&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Ask&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://wowchemy.com/docs/managing-content/#create-slides&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Documentation&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Файловая система FAT</title>
      <link>https://dmbelicheva.github.io/project/example/</link>
      <pubDate>Wed, 27 Apr 2016 00:00:00 +0000</pubDate>
      <guid>https://dmbelicheva.github.io/project/example/</guid>
      <description>&lt;h1 id=&#34;введение&#34;&gt;Введение&lt;/h1&gt;
&lt;p&gt;Информация в информационных системах (ИС) возникает в процессе обработки хранящихся данных. На компьютерах, используемых для создания ИС, данные хранятся на постоянном запоминающем устройстве (ПЗУ) в виде именованных последовательностей, называемых файлами. Хранение файлов подобно хранению книг в библиотеке, и для организации доступа к ним требуется специальная система, обеспечивающая минимизацию времени доступа и удобство работы.
Файловая система представляет совокупность служебных структур на носителе и средств операционной системы, обеспечивающих манипуляцию файлами. (Исторически сложилось, что операционные системы семейства Windows развиваются в двух направлениях (Windows 95, Windows 98 и Windows Ме составляют одно направление, а Windows NT и Windows 2000 второе направление), предоставляющих различные средства для работы со служебными структурами и файлами).
Файловая система FAT (File Allocation Table) была разработана Биллом Гейтсом и Марком МакДональдом в 1977 году и первоначально использовалась в операционной системе 86-DOS. Чтобы добиться переносимости программ из операционной системы CP/M в 86-DOS, в ней были сохранены ранее принятые ограничения на имена файлов. В дальнейшем 86-DOS была приобретена Microsoft и стала основой для ОС MS-DOS 1.0, выпущенной в августе 1981 года. Эта файловая система была изначально создана для обеспечения произвольного доступа к файлам на гибких дисках относительно небольшого размера.
Сейчас существует четыре версии FAT — FAT8, FAT12, FAT16 и FAT32. Они отличаются разрядностью записей в дисковой структуре, то есть количеством бит, отведённых для хранения номера кластера. FAT12 применяется в основном для дискет, FAT16 — для дисков малого объёма, FAT32- для жестких дисков. На основе FAT была разработана новая файловая система exFAT (extended FAT), используемая преимущественно для флеш-накопителей.&lt;/p&gt;
&lt;h1 id=&#34;структура-fat&#34;&gt;Структура FAT&lt;/h1&gt;
&lt;p&gt;В файловой системе FAT дисковое пространство любого логического диска делится на две области:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;системную область и&lt;/li&gt;
&lt;li&gt;область данных.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Системная область создается и инициализируется при форматировании, а впоследствии обновляется при манипулировании файловой структурой.
Системная область состоит из следующих компонентов:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;загрузочного сектора, содержащего загрузочную запись (boot record);&lt;/li&gt;
&lt;li&gt;зарезервированных секторов (их может и не быть);&lt;/li&gt;
&lt;li&gt;таблицы размещения файлов (FAT, File Allocation Table);&lt;/li&gt;
&lt;li&gt;корневого каталога (Root directory, ROOT).
Эти компоненты расположены на диске друг за другом.
Область данных содержит файлы и каталоги, подчиненные корневому.
Область данных разбивают на так называемые кластеры. Кластер - это один или несколько смежных секторов области данных. С другой стороны, кластер - это минимальная адресуемая единица дисковой памяти, выделяемая файлу. Т.е. файл или каталог занимает целое число кластеров. Для создания и записи на диск нового файла операционная система отводит для него несколько свободных кластеров диска. Эти кластеры не обязательно должны следовать друг за другом. Для каждого файла хранится список всех номеров кластеров, которые предоставлены данному файлу.
Разбиение области данных на кластеры вместо использования секторов позволяет:&lt;/li&gt;
&lt;li&gt;уменьшить размер таблицы FAT;&lt;/li&gt;
&lt;li&gt;уменьшить фрагментацию файлов;&lt;/li&gt;
&lt;li&gt;сокращается длина цепочек файла и ускоряется доступ к файлу.
Однако слишком большой размер кластера ведет к неэффективному использованию области данных, особенно в случае большого количества маленьких файлов (ведь на каждый файл теряется в среднем полкластера).
В современных файловых системах (FAT32, HPFS, NTFS) эта проблема решается за счет ограничения размера кластера (максимум 4 Кбайта)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Картой области данных является Таблица размещения файлов (File Allocation Table - FAT) Каждый элемент таблицы FAT (12, 16 или 32 бит) соответствует одному кластеру диска и характеризует его состояние: свободен, занят или является сбойным кластером (bad cluster).&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Если кластер распределен какому-либо файлу (т.е., занят), то соответствующий элемент FAT содержит номер следующего кластера файла;&lt;/li&gt;
&lt;li&gt;последний кластер файла отмечается числом в диапазоне FF8h - FFFh (FFF8h - FFFFh);&lt;/li&gt;
&lt;li&gt;если кластер является свободным, он содержит нулевое значение 000h (0000h);&lt;/li&gt;
&lt;li&gt;кластер, непригодный для использования (сбойный), отмечается числом FF7h (FFF7h).
Таким образом, в таблице FAT кластеры, принадлежащие одному файлу, связываются в цепочки.
Таблица размещения файлов хранится сразу после загрузочной записи логического диска, ее точное расположение описано в специальном поле в загрузочном секторе.
Она хранится в двух идентичных экземплярах, которые следуют друг за другом. При разрушении первой копии таблицы используется вторая.
В связи с тем, что FAT используется очень интенсивно при доступе к диску, она обычно загружается в ОП (в буфера ввода/вывода или кэш) и остается там настолько долго, насколько это возможно.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Для просмотра и редактирования таблицы FAT можно использовать утилиту Disk Editor.&lt;/p&gt;
&lt;p&gt;Подробная информация о самом файле хранится в другой структуре, которая называется корневым каталогом. Каждый логический диск (Жесткий диск является физическим устройством, т.е. его можно физически установить, заменить или удалить.
Для удобства работы жесткий диск разбивают на логические диски, которые являются виртуальными и их нельзя, что называется, потрогать руками.
На одном жестком диске может быть:
•	либо несколько логических дисков,
•	либо один-единственный логический диск.)
имеет свой корневой каталог (ROOT, англ. - корень).
Корневой каталог описывает файлы и другие каталоги. Элементом каталога является дескриптор (описатель) файла.
Дескриптор каждого файла и каталога включает его&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;имя&lt;/li&gt;
&lt;li&gt;расширение&lt;/li&gt;
&lt;li&gt;дату создания или последней модификации&lt;/li&gt;
&lt;li&gt;время создания или последней модификации&lt;/li&gt;
&lt;li&gt;атрибуты (архивный, атрибут каталога, атрибут тома, системный, скрытый, только для чтения)&lt;/li&gt;
&lt;li&gt;длину файла (для каталога - 0)&lt;/li&gt;
&lt;li&gt;зарезервированное поле, которое не используется&lt;/li&gt;
&lt;li&gt;номер первого кластера в цепочке кластеров, отведенных файлу или каталогу; получив этот номер, операционная система, обращаясь к таблице FAT, узнает и все остальные номера кластеров файла.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Итак, пользователь запускает файл на выполнение. Операционная система ищет файл с нужным именем, просматривая описания файлов в текущем каталоге. Когда найден требуемый элемент в текущем каталоге, операционная система считывает номер первого кластера данного файла, а затем по таблице FAT определяет остальные номера кластеров. Данные из этих кластеров считываются в оперативную память, объединяясь в один непрерывный участок. Операционная система передает управление файлу, и программа начинает работать.&lt;/p&gt;
&lt;p&gt;Для просмотра и редактирования корневого каталога ROOT можно также использовать утилиту Disk Editor.&lt;/p&gt;
&lt;h1 id=&#34;разновидности-fat&#34;&gt;Разновидности FAT&lt;/h1&gt;
&lt;p&gt;Файловая система VFAT
Файловая система VFAT (виртуальная FAT) впервые появилась в Windows for Workgroups 3.11 и была предназначена для файлового ввода/вывода в защищенном режиме.
Используется эта файловая система в Windows 95.
Поддерживается она также и в Windows NT 4.
VFAT - это «родная» 32-разрядная файловая система Windows95. Ее контролирует драйвер VFAT.VXD.
VFAT использует 32-разрядный код для всех файловых операций, может использовать 32-разрядные драйверы защищенного режима.
НО, элементы таблицы размещения файлов остаются 12- или 16-разрядными, поэтому на диске используется та же структура данных (FAT). Т.е. формат таблицы VFAT такой же, как и формат FAT.
VFAT наряду с именами «8.3» поддерживает длинные имена файлов. (Часто говорят, что VFAT - это FAT с поддержкой длинных имен).
Основной недостаток VFAT - большие потери на кластеризацию при больших размерах логического диска и ограничения на сам размер логического диска.&lt;/p&gt;
&lt;p&gt;Файловая система FAT32
Это новая реализация идеи использования таблицы FAT.
FAT32 — последняя версия файловой системы FAT и улучшение предыдущей версии, известной как FAT16. Она была создана, чтобы преодолеть ограничения на размер тома в FAT16, позволяя при этом использовать старый код программ MS-DOS и сохранив формат.
FAT32 - это полностью самостоятельная 32-разрядная файловая система.
Впервые использовалась в Windows OSR2 (OEM Service Release 2).
В настоящее время FAT32 используется в Windows 98 и Windows ME.
Она содержит многочисленные усовершенствования и дополнения по сравнению с предыдущими реализациями FAT.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Намного эффективнее расходует дисковое пространство за счет того, что использует кластеры меньшего размера (4 Кб) - подсчитано, что экономится до 15%.&lt;/li&gt;
&lt;li&gt;Имеет расширенную загрузочную запись, которая позволяет создавать копии критических структур данных, что повышает устойчивость диска к нарушениям структур диска&lt;/li&gt;
&lt;li&gt;Может использовать резервную копию FAT вместо стандартной.&lt;/li&gt;
&lt;li&gt;Может перемещать корневой каталог, другими словами, корневой каталог может находиться в произвольном месте, что снимает ограничение на размер корневого каталога (512 элементов, т.к. ROOT должен был занимать один кластер).&lt;/li&gt;
&lt;li&gt;Усовершенствована структура корневого каталога
Появились дополнительные поля, например, время создания, дата создания, дата последнего доступа, контрольная сумма.
По-прежнему для длинного имени файла используется несколько дескрипторов.
exFAT
Обновленная файловая система созданная компанией microsoft на замену FAT32. Начала использоваться в Windows Vista SP1 и имеет максимальный размер файла 16 эксабайт (ЭБ), который равен 1 Эб = 1018 байтам. Совместима с Mac OS и Windows, является очень хорошей системой для обмена большими файлами.
Минусы:
•	Она не имеет никакой функциональности журналирования, в которой все изменения файлов на диске, отмечены в журнале прежде, чем они на самом деле выполнены.
•	Не поддерживается Time Machine в Apple. Одним словом, вы не сможете сделать резервную копию от Apple с помощью программного обеспечения Time Machine.
•	Очень сложная структура, требующая больше вычислительных мощностей.
Плюсы:
•	Перезаписывает меньшее количество раз один и тот же сектор, что важно для флешек, продлевая жизнь ячейкам памяти. Как известно флешки имеют N-количества перезаписей, потом выходят из строя.
•	Большой лимит на размер файла 16 эксабайт.
•	Размер кластера 32 мегабайта.
•	Улучшено распределение свободного место, что уменьшает дефрагментацию&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;достоинства-и-недостатки-fat&#34;&gt;Достоинства и недостатки FAT&lt;/h1&gt;
&lt;p&gt;Достоинства FAT:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;для эффективной работы требуется немного оперативной памяти;&lt;/li&gt;
&lt;li&gt;быстрая работа с малыми и средними каталогами;&lt;/li&gt;
&lt;li&gt;меньшее перемещение головок;&lt;/li&gt;
&lt;li&gt;эффективная работа на медленных дисках.
Недостатки FAT:&lt;/li&gt;
&lt;li&gt;большая потеря быстродействия с увеличением фрагментации;&lt;/li&gt;
&lt;li&gt;сложность с произвольным доступом к большим файлам;&lt;/li&gt;
&lt;li&gt;очень медленная работа с каталогами, содержащими большое количество файлов. При создании файла работает правило - выделяется первый свободный кластер. Это ведет к фрагментации диска и сложным цепочкам файлов. Отсюда следует замедление работы с файлами.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>An example conference paper</title>
      <link>https://dmbelicheva.github.io/publication/example/</link>
      <pubDate>Mon, 01 Jul 2013 00:00:00 +0000</pubDate>
      <guid>https://dmbelicheva.github.io/publication/example/</guid>
      <description>&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Click the &lt;em&gt;Cite&lt;/em&gt; button above to demo the feature to enable visitors to import publication metadata into their reference management software.
  &lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Create your slides in Markdown - click the &lt;em&gt;Slides&lt;/em&gt; button to check out the example.
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Supplementary notes can be added here, including &lt;a href=&#34;https://wowchemy.com/docs/writing-markdown-latex/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;code, math, and images&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>https://dmbelicheva.github.io/admin/config.yml</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://dmbelicheva.github.io/admin/config.yml</guid>
      <description></description>
    </item>
    
  </channel>
</rss>
